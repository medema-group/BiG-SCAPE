name: Deploy BiG-SCAPE code

on:
  release:
    types: [published, edited]


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  # not sure if this works. the branch name env does not
  # seem to want to propagate into the docker build step
  BRANCH_NAME: ${{ github.ref }}



jobs:

  # UPDATE VERSION NUMBER
  update-version-number:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - name: Update Version Number
        run: |
          OLD_VERSION=$(grep ^version pyproject.toml | cut -d '"' -f 2)
          OLD_VERSION="\"$OLD_VERSION\""
          NEW_VERSION="\"$GITHUB_REF_NAME\""
          sed -i "s+version = $OLD_VERSION+version = $NEW_VERSION+g" pyproject.toml
      - name: Commit Changes
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git commit -a -m "Update version number to new_version"
          git push origin $GITHUB_REF_NAME

  # DOCKER BUILD AND PUSH TO GHCR
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: update-version-number
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        # set latest tag for master branch
        with:
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            TAG_NAME=${{ github.ref }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  # TODO: DEPLOY TO BIOCONDA
